% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit.R
\name{fit_subject_metapca}
\alias{fit_subject_metapca}
\title{Combine per-run genpca fits via meta-PCA (MFA)}
\usage{
fit_subject_metapca(fits, k = 20)
}
\arguments{
\item{fits}{List of \code{genpca} fit objects to combine.}

\item{k}{Number of meta-components to return (consensus dimensionality).}
}
\value{
A \code{metapca} object with combined loadings \code{v} and related metadata.
}
\description{
Aggregates multiple \code{genpca} fits (e.g., per-run, per-session, or per-subject)
into a single consensus component space using \code{subpca::metapca} with Multiple
Factor Analysis (MFA) weighting. This is a “PCA of PCAs” that operates on the
loadings from each individual fit, balancing contributions across inputs.
}
\details{
Two common workflows are supported in fmrigpca:
\enumerate{
\item Joint fit across runs: stack runs in time, build a block-diagonal row
metric \code{M}, and fit once via \code{\link[=fit_subject_genpca]{fit_subject_genpca()}}. This shares a single
spatial column metric \code{A} and exploits all timepoints jointly.
\item Meta-PCA across individual fits: fit each run (or session/subject)
separately to obtain \code{genpca} objects, then combine them with meta-PCA.
}

Meta-PCA uses MFA weighting to avoid any single fit dominating due to scale
or sample size differences, and returns a \code{metapca} object with combined
loadings (accessible as \verb{$v}). Use this when:
\itemize{
\item Runs/sessions are heterogeneous and you prefer to fit them independently
(e.g., different preprocessing, durations, or acquisition settings)
\item Combining across subjects after per-subject genpca fits
}

Assumptions and tips:
\itemize{
\item Loadings should be defined on the same voxel/parcel index set (e.g., same
mask and order). If they differ, align to a common subset before fitting.
\item Keep \code{k} small and comparable across inputs; \code{metapca} selects a
consensus space up to \code{ncomp = k}.
\item See the subpca package for algorithmic details of MFA combination.
}
}
\examples{
\donttest{
# Per-run fits (each list contains a single run)
fits <- lapply(seq_along(nv_list), function(r) {
  fit_subject_genpca(
    nv_list = list(nv_list[[r]]),
    mask_vol = mask,
    gm_vol = gm, wm_vol = wm, csf_vol = csf,
    k = 5, p_ar = 1L
  )
})
# Combine via meta-PCA (MFA weighting)
meta <- fit_subject_metapca(fits, k = 3)
str(meta$v)  # consensus loadings (voxels x k)
}

}
\seealso{
\code{\link[=fit_subject_genpca]{fit_subject_genpca()}} and \code{\link[=fit_subject_genpca_parcel]{fit_subject_genpca_parcel()}} for
generating individual fits to combine

Other main fitting: 
\code{\link{fit_subject_genpca}()},
\code{\link{fit_subject_genpca_parcel}()}
}
\concept{main fitting}
