% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spatial.R
\name{compute_tsnr}
\alias{compute_tsnr}
\title{Temporal SNR (tSNR) per voxel across runs}
\usage{
compute_tsnr(nv_list)
}
\arguments{
\item{nv_list}{List of \code{neuroim2::NeuroVec} runs.}
}
\value{
Numeric vector of length V (voxels) with tSNR values.
}
\description{
Computes per-voxel temporal signal-to-noise ratio across a list of \code{NeuroVec}
runs by aggregating first and second moments over time and runs.
}
\details{
For each voxel, the mean and variance are computed over concatenated time
points across runs. tSNR is \code{max(1e-6, mean) / max(1e-6, sd)}, then lower-
bounded at \code{1e-6} to avoid degenerate weights.
}
\examples{
\donttest{
# Create simple test data
dims <- c(10, 10, 5, 20)  # 4D: x, y, z, time
space <- neuroim2::NeuroSpace(dims,
                               spacing = c(1, 1, 1),
                               origin = c(0, 0, 0))
mask <- array(TRUE, dims[1:3])  # 3D mask

# Create two runs with random data
data1 <- array(rnorm(prod(dims)), dims)
data2 <- array(rnorm(prod(dims)), dims)
nv1 <- neuroim2::NeuroVec(data1, space, mask = mask)
nv2 <- neuroim2::NeuroVec(data2, space, mask = mask)

tsnr <- compute_tsnr(list(nv1, nv2))
}

}
\seealso{
\code{\link[=compute_tsnr_parcel]{compute_tsnr_parcel()}} for parcel-level tSNR computation

Other spatial metrics: 
\code{\link{build_spatial_metric}()},
\code{\link{build_spatial_metric_parcel}()},
\code{\link{compute_tsnr_parcel}()},
\code{\link{make_laplacian}()},
\code{\link{make_parcel_laplacian}()}
}
\concept{spatial metrics}
