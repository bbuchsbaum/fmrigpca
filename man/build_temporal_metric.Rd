% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/temporal.R
\name{build_temporal_metric}
\alias{build_temporal_metric}
\title{Build temporal covariance metric for generalized PCA}
\usage{
build_temporal_metric(
  nv_run,
  wm_mask = NULL,
  p = 1L,
  FD = NULL,
  DVARS = NULL,
  lambda_t = 0.3,
  ridge = 1e-06
)
}
\arguments{
\item{nv_run}{A \code{neuroim2::NeuroVec} (single run) containing fMRI time series.}

\item{wm_mask}{Optional \code{NeuroVol} white matter mask. When provided, AR
parameters are estimated from the mean white matter signal, which typically
has less neural signal and better represents noise autocorrelation.}

\item{p}{Integer AR order (default 1). Common choices:
\itemize{
\item 0: No AR modeling (independent time points)
\item 1: First-order autoregression (standard, captures ~70\% of autocorrelation)
\item 2-3: Higher orders for data with stronger temporal dependencies
}}

\item{FD}{Optional numeric vector of framewise displacement values (mm).
Length must equal the number of time points. Typically computed during
motion correction preprocessing.}

\item{DVARS}{Optional numeric vector of DVARS values (signal derivative RMS).
Length must equal the number of time points. Typically computed from
preprocessed BOLD signal.}

\item{lambda_t}{Temporal smoothness penalty weight (default 0.3). Range 0-1:
\itemize{
\item 0: No temporal smoothing
\item 0.3: Standard smoothing (default)
\item 0.5-0.7: Strong smoothing for high-motion or noisy data
\item 1.0: Maximum smoothing
}}

\item{ridge}{Small positive value added to diagonal for numerical stability
(default 1e-6). Increase if encountering singular matrix errors.}
}
\value{
A symmetric positive definite \code{Matrix} of size \verb{T x T} encoding
temporal covariance structure for use in generalized PCA.
}
\description{
Constructs a temporal covariance metric (row metric M) that encodes temporal
dependencies, smoothness constraints, and data quality weights for a single
fMRI run. This metric is used as the row-wise (temporal) metric in generalized
PCA to properly account for temporal structure in fMRI data.
}
\details{
\subsection{Purpose in Generalized PCA}{

In standard PCA, all time points are treated as independent and equally
reliable. This is inappropriate for fMRI data where:
\itemize{
\item Consecutive time points are correlated (temporal autocorrelation)
\item Some time points are corrupted by motion artifacts
\item Neural signals vary smoothly over time
}

This function builds a metric M that encodes these properties, allowing
generalized PCA to find components that respect the temporal structure
of fMRI data.
}

\subsection{Mathematical Formulation}{

The temporal metric combines three key components:

\verb{M = W^\{1/2\} Q' H Q W^\{1/2\} + ridge * I}

where:
\itemize{
\item \code{Q}: AR(p) whitening matrix that removes temporal autocorrelation
\item \code{H}: Temporal smoothness penalty (second-difference operator)
\item \code{W}: Diagonal weights based on motion quality (FD/DVARS)
\item \code{ridge}: Small regularization for numerical stability
}
}

\subsection{Components Explained}{

\strong{AR Whitening (Q)}: fMRI time series exhibit strong autocorrelation
(typically 0.3-0.5 at lag 1). The AR whitener transforms the data to make
time points approximately independent, preventing overrepresentation of
slow temporal drifts in the components.

\strong{Temporal Smoothness (H)}: Neural signals change smoothly over time.
The penalty \verb{H = I + λ_t * D2' D2} (where D2 is the second-difference
operator) encourages components with smooth temporal profiles while
allowing for dynamic changes.

\strong{Motion Weighting (W)}: Time points with high motion (FD) or global
signal changes (DVARS) are down-weighted rather than discarded. This
soft censoring approach maintains temporal continuity while reducing
artifact influence. See \code{make_frame_weights()} for details.
}

\subsection{Usage Scenarios}{
\itemize{
\item \strong{Standard}: \verb{p=1, lambda_t=0.3} with both FD and DVARS
\item \strong{High motion data}: Increase lambda_t (0.5-0.7) for more smoothing
\item \strong{Task fMRI}: Consider p=0 if modeling task regressors separately
\item \strong{Resting state}: Always use p≥1 to account for autocorrelation
}
}
}
\examples{
\dontrun{
# Basic usage with AR(1) whitening
M <- build_temporal_metric(nv_run, p = 1L)

# With motion correction
M <- build_temporal_metric(nv_run, wm_mask = wm_vol, 
                           FD = fd_values, DVARS = dvars_values,
                           lambda_t = 0.5)

# No AR modeling for task fMRI with explicit task regressors
M <- build_temporal_metric(nv_run, p = 0, lambda_t = 0.3)
}

}
\seealso{
\itemize{
\item \code{\link[=build_temporal_metric_parcel]{build_temporal_metric_parcel()}} for parcel-level temporal metrics
\item \code{\link[=estimate_ar_whitener]{estimate_ar_whitener()}} for AR parameter estimation details
\item \code{\link[=make_temporal_penalty]{make_temporal_penalty()}} for smoothness penalty construction
\item \code{\link[=make_frame_weights]{make_frame_weights()}} for motion-based weighting
}

Other temporal metrics: 
\code{\link{build_temporal_metric_parcel}()},
\code{\link{estimate_ar_whitener}()},
\code{\link{estimate_ar_whitener_parcel}()},
\code{\link{make_frame_weights}()},
\code{\link{make_temporal_penalty}()}
}
\concept{temporal metrics}
