% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spatial.R
\name{build_spatial_metric}
\alias{build_spatial_metric}
\title{Build spatial column metric A from tissue maps, Laplacian, and tSNR}
\usage{
build_spatial_metric(
  gm_vol,
  wm_vol,
  csf_vol,
  L,
  tsnr = NULL,
  mask_idx = NULL,
  alpha = 1,
  beta = 0.5,
  gamma = 1,
  lambda_s = 0.5,
  tau = 1e-06
)
}
\arguments{
\item{gm_vol, wm_vol, csf_vol}{\code{NeuroVol} tissue probability maps.}

\item{L}{Laplacian \code{Matrix} over in-mask voxels.}

\item{tsnr}{Optional numeric tSNR vector over in-mask voxels.}

\item{mask_idx}{Integer indices of in-mask voxels (length equals \code{nrow(L)}).}

\item{alpha, beta, gamma}{Exponents for GM, tSNR, and (WM+CSF) weighting.}

\item{lambda_s}{Spatial regularization weight multiplying \code{L}.}

\item{tau}{Small ridge added to the diagonal (default 1e-6).}
}
\value{
Symmetric positive definite \code{Matrix} of size \verb{V_in x V_in}.
}
\description{
Constructs a positive definite spatial column metric \code{A} that encodes spatial
smoothness (graph Laplacian) and voxelwise weights derived from tissue
probabilities and temporal SNR. Adds a small ridge for numerical stability.
}
\details{
Let \code{w = gm^alpha * tsnr^beta * (wm + csf)^{-gamma}} on in-mask voxels. Define
\code{S = I + lambda_s * L} where \code{L} is a (normalized) Laplacian. Then
\verb{A = diag(sqrt(w)) S diag(sqrt(w)) + tau * I}. The \code{mask_idx} selects in-mask
voxel indices and must align with \code{nrow(L)}. If \code{tsnr} is \code{NULL}, it defaults
to 1. Tissue maps must share space with the mask.
}
\examples{
\donttest{
# Create small example volumes
dims <- c(5, 5, 3)
space <- neuroim2::NeuroSpace(dims, c(1, 1, 1))

# Create tissue probability maps
gm_data <- array(runif(prod(dims), 0.5, 1), dims)
wm_data <- array(runif(prod(dims), 0, 0.3), dims)
csf_data <- array(runif(prod(dims), 0, 0.2), dims)

gm <- neuroim2::NeuroVol(gm_data, space)
wm <- neuroim2::NeuroVol(wm_data, space)
csf <- neuroim2::NeuroVol(csf_data, space)

# Create mask and Laplacian
mask <- neuroim2::NeuroVol(gm_data > 0.3, space)
L <- make_laplacian(mask, k = 6)
mask_idx <- which(neuroim2::values(mask) > 0)

A <- build_spatial_metric(gm, wm, csf, L, mask_idx = mask_idx)
}

}
\seealso{
\code{\link[=build_spatial_metric_parcel]{build_spatial_metric_parcel()}} for parcel-level column metric construction

Other spatial metrics: 
\code{\link{build_spatial_metric_parcel}()},
\code{\link{compute_tsnr}()},
\code{\link{compute_tsnr_parcel}()},
\code{\link{make_laplacian}()},
\code{\link{make_parcel_laplacian}()}
}
\concept{spatial metrics}
